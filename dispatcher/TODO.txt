Things that would be nice to have, but are not critical for production at this
time:

== job result storage and retention ==

  * listing recorded jobs (including terminated ones)
  * timestamps in stream logs

== communication with dispatcher ==

  * SSL listening sockets
  * client authentication
  * add "enqueued" to possible returned values ("get_result", "read_stream")
  * job deduplication mechanism
    * "call this function, but not if last call was less than 10 minutes ago"
    * similar to queues: dedup key (~queue name) and dedup parameters

== communication with daemon ==

  * verify daemon's SSL certificate (CN and subjectAltName fields)

== code internals ==

  * harpcaller_caller and harpcaller_tcp_return_{result,stream}: refactoring
  * tcp_worker: list of modules
    * list all used modules, or
    * set `dynamic' and handle `get_modules' system command (how?)
    * how does code upgrade work for process that needs to upgrade module it
      doesn't use?
  * harpcaller_caller: when dies, log this (harpcaller_log:error())
